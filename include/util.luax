function Error(atts, children)
    return <div class="red">[ERROR: {{ bhp.expand(children) }}]</div>
end

function TODO(atts, children)
    return <div class="orange">[TODO: {{ bhp.expand(children) }}]</div>
end

function truncate(str, n)
    return string.sub(str, 1, n)
end

function map(t, f)
    local res = {}
    for i, v in ipairs(t) do
        res[i] = f(v)
    end
    return res
end

function collect(it)
    local res = {}
    for i in it do
        table.insert(res, i)
    end
    return res
end

function explode(s, limit)
    limit = limit or -1

    if limit == 0 then
        return {}
    end

    local res = {}
    local n = 0
    for i = 1, #s do
        if n == limit - 1 then
            table.insert(res, string.sub(s, i))
            break
        end
        table.insert(res, string.sub(s, i, i))
        n = n + 1
    end
    return res
end

function split(s, sep, limit, plain)
    sep = sep or ""
    limit = limit or -1

    if sep == "" then
        return explode(s, limit)
    end
    if limit == 0 then
        return {}
    end

    local res = {}
    local i, n = 1, 0
    while i <= #s do
        if n == limit - 1 then
            table.insert(res, string.sub(s, i))
            break
        end

        local mstart, mend = string.find(s, sep, i, plain)
        if not mstart then
            table.insert(res, string.sub(s, i))
            break
        end

        table.insert(res, string.sub(s, i, mstart-1))
        i = mend + 1
        n = n + 1
    end

    return res
end

function slice(t, i, j)
    return { unpack(t, i, j) }
end
